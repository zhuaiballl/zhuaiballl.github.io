{"remainingRequest":"/Users/guohechuan/code/aurora/node_modules/babel-loader/lib/index.js!/Users/guohechuan/code/aurora/node_modules/eslint-loader/index.js??ref--13-0!/Users/guohechuan/code/aurora/src/utils/format.js","dependencies":[{"path":"/Users/guohechuan/code/aurora/src/utils/format.js","mtime":1626163653610},{"path":"/Users/guohechuan/code/aurora/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/guohechuan/code/aurora/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/guohechuan/code/aurora/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmRleC1vZiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW0iOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0IHsgZm9ybWF0IH0gZnJvbSAndGltZWFnby5qcyc7CmltcG9ydCB7IHBhcnNlVGltZSB9IGZyb20gJy4vaW5kZXgnOwppbXBvcnQgY29uZmlnIGZyb20gJy4uL2NvbmZpZyc7Ci8qKgogKiDmoLzlvI/ljJbmlofnq6AKICovCgp2YXIgcmVnZXggPSAvXiguKyk/XHJcblxzKiguKyk/XHJcbi87CnZhciBjb3ZlclJlZ2V4ID0gL15cWyguKylcXS4qKGh0dHAuKig/OmpwZ3xqcGVnfHBuZ3xnaWYpKS87CmV4cG9ydCB2YXIgZm9ybWF0UG9zdCA9IGZ1bmN0aW9uIGZvcm1hdFBvc3QocG9zdCkgewogIHZhciBib2R5ID0gcG9zdC5ib2R5LAogICAgICBjcmVhdGVkX2F0ID0gcG9zdC5jcmVhdGVkX2F0OwogIHZhciByZXN1bHQgPSByZWdleC5leGVjKGJvZHkpOwogIHZhciBjb3ZlciA9IGNvdmVyUmVnZXguZXhlYyhyZXN1bHRbMV0pOwoKICBpZiAoY292ZXIgJiYgY292ZXIubGVuZ3RoID09PSAzKSB7CiAgICBwb3N0LmNvdmVyID0gewogICAgICB0aXRsZTogY292ZXJbMV0sCiAgICAgIHNyYzogY292ZXJbMl0KICAgIH07CiAgICBwb3N0LmRlc2NyaXB0aW9uID0gcmVzdWx0WzJdOwogIH0gZWxzZSB7CiAgICBwb3N0LmNvdmVyID0gewogICAgICB0aXRsZTogJycsCiAgICAgIHNyYzogY29uZmlnLmRlZmF1bHRDb3ZlcgogICAgfTsKICAgIHBvc3QuZGVzY3JpcHRpb24gPSByZXN1bHRbMV07CiAgfQoKICBwb3N0LmNyZWF0ZWRfYXQgPSBmb3JtYXQoY3JlYXRlZF9hdCwgJ3poX0NOJykucmVwbGFjZSgvXHMvLCAnJyk7CiAgcmV0dXJuIHBvc3Q7Cn07Ci8qKgogKiDmoLzlvI/ljJbliIbnsbsKICovCgpleHBvcnQgdmFyIGZvcm1hdENhdGVnb3J5ID0gZnVuY3Rpb24gZm9ybWF0Q2F0ZWdvcnkoY2F0ZWdvcnkpIHsKICBjYXRlZ29yeS5mb3JFYWNoKGZ1bmN0aW9uIChvKSB7CiAgICB2YXIgZGVzY3JpcHRpb24gPSBvLmRlc2NyaXB0aW9uLnNwbGl0KCdcclxuJyk7CiAgICBvLnN1bW1hcnkgPSBkZXNjcmlwdGlvblswXS5zcGxpdCgnc3VtbWFyeTonKVsxXTsKICAgIG8uY292ZXIgPSBkZXNjcmlwdGlvblsxXS5zcGxpdCgnY292ZXI6JylbMV07CiAgfSk7CiAgcmV0dXJuIGNhdGVnb3J5Owp9OwovKioKICog5qC85byP5YyW54G15oSfCiAqLwoKZXhwb3J0IHZhciBmb3JtYXRJbnNwaXJhdGlvbiA9IGZ1bmN0aW9uIGZvcm1hdEluc3BpcmF0aW9uKGluc3BpcmF0aW9uKSB7CiAgaW5zcGlyYXRpb24uZm9yRWFjaChmdW5jdGlvbiAobykgewogICAgcmV0dXJuIG8uZGF0ZSA9IHBhcnNlVGltZShvLmNyZWF0ZWRfYXQsICd7eX3lubR7bX3mnIh7ZH3ml6UnKTsKICB9KTsKICByZXR1cm4gaW5zcGlyYXRpb247Cn07Ci8qKgogKiDmoLzlvI/ljJbkuabljZUgJiDlj4vpk74gJiDlhbPkuo4KICovCgpleHBvcnQgdmFyIGZvcm1hdFBhZ2UgPSBmdW5jdGlvbiBmb3JtYXRQYWdlKGRhdGEsIHR5cGUpIHsKICBpZiAoIWRhdGEgfHwgIWRhdGEuYm9keSkgcmV0dXJuIFtdOwogIHZhciBzZWN0aW9uID0gZGF0YS5ib2R5LnNwbGl0KCcjIyAnKS5maWx0ZXIoZnVuY3Rpb24gKG8pIHsKICAgIHJldHVybiBvLmxlbmd0aDsKICB9KTsKCiAgc3dpdGNoICh0eXBlKSB7CiAgICBjYXNlICdib29rJzoKICAgIGNhc2UgJ2ZyaWVuZCc6CiAgICAgIHNlY3Rpb24gPSBzZWN0aW9uLm1hcChmdW5jdGlvbiAobykgewogICAgICAgIHZhciBjb250ZW50ID0gby5zcGxpdCgnXHJcbicpLmZpbHRlcihmdW5jdGlvbiAobykgewogICAgICAgICAgcmV0dXJuIG8ubGVuZ3RoOwogICAgICAgIH0pOwogICAgICAgIHZhciByZXN1bHQgPSB7fTsKICAgICAgICBjb250ZW50LmZvckVhY2goZnVuY3Rpb24gKHJvdywgaW5kZXgpIHsKICAgICAgICAgIGlmIChpbmRleCA9PT0gMCkgewogICAgICAgICAgICByZXN1bHQubmFtZSA9IHJvdzsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHZhciBpbnggPSByb3cuaW5kZXhPZignOicpOwogICAgICAgICAgICB2YXIga2V5ID0gcm93LnNsaWNlKDAsIGlueCk7CiAgICAgICAgICAgIHZhciB2YWx1ZSA9IHJvdy5zbGljZShpbnggKyAxKTsKICAgICAgICAgICAgcmVzdWx0W2tleV0gPSB2YWx1ZTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgICB9KTsKICAgICAgYnJlYWs7CgogICAgY2FzZSAnYWJvdXQnOgogICAgICBzZWN0aW9uID0gc2VjdGlvbi5tYXAoZnVuY3Rpb24gKG8pIHsKICAgICAgICB2YXIgdGl0bGUgPSBvLm1hdGNoKC8uKz9cclxuLylbMF07CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHRpdGxlOiB0aXRsZSwKICAgICAgICAgIGNvbnRlbnQ6IG8uc2xpY2UodGl0bGUubGVuZ3RoKQogICAgICAgIH07CiAgICAgIH0pOwogICAgICBicmVhazsKCiAgICBkZWZhdWx0OgogICAgICBicmVhazsKICB9IC8vIOenu+mZpOmmluWwvuepuuagvAoKCiAgc2VjdGlvbi5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICBPYmplY3Qua2V5cyhpdGVtKS5mb3JFYWNoKGZ1bmN0aW9uIChrKSB7CiAgICAgIGl0ZW1ba10gPSBpdGVtW2tdLnRyaW0oKTsKICAgIH0pOwogIH0pOwogIHJldHVybiBzZWN0aW9uOwp9Ow=="},{"version":3,"sources":["/Users/guohechuan/code/aurora/src/utils/format.js"],"names":["format","parseTime","config","regex","coverRegex","formatPost","post","body","created_at","result","exec","cover","length","title","src","description","defaultCover","replace","formatCategory","category","forEach","o","split","summary","formatInspiration","inspiration","date","formatPage","data","type","section","filter","map","content","row","index","name","inx","indexOf","key","slice","value","match","item","Object","keys","k","trim"],"mappings":"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","sourcesContent":["import { format } from 'timeago.js'\nimport { parseTime } from './index'\nimport config from '../config'\n\n/**\n * 格式化文章\n */\nconst regex = /^(.+)?\\r\\n\\s*(.+)?\\r\\n/\nconst coverRegex = /^\\[(.+)\\].*(http.*(?:jpg|jpeg|png|gif))/\nexport const formatPost = (post) => {\n  const { body, created_at } = post\n  const result = regex.exec(body)\n  const cover = coverRegex.exec(result[1])\n  if (cover && cover.length === 3) {\n    post.cover = {\n      title: cover[1],\n      src: cover[2],\n    }\n    post.description = result[2]\n  } else {\n    post.cover = {\n      title: '',\n      src: config.defaultCover,\n    }\n    post.description = result[1]\n  }\n  post.created_at = format(created_at, 'zh_CN').replace(/\\s/, '')\n  return post\n}\n\n/**\n * 格式化分类\n */\nexport const formatCategory = (category) => {\n  category.forEach((o) => {\n    const description = o.description.split('\\r\\n')\n    o.summary = description[0].split('summary:')[1]\n    o.cover = description[1].split('cover:')[1]\n  })\n  return category\n}\n\n/**\n * 格式化灵感\n */\nexport const formatInspiration = (inspiration) => {\n  inspiration.forEach((o) => (o.date = parseTime(o.created_at, '{y}年{m}月{d}日')))\n  return inspiration\n}\n\n/**\n * 格式化书单 & 友链 & 关于\n */\nexport const formatPage = (data, type) => {\n  if (!data || !data.body) return []\n  let section = data.body.split('## ').filter((o) => o.length)\n\n  switch (type) {\n    case 'book':\n    case 'friend':\n      section = section.map((o) => {\n        const content = o.split('\\r\\n').filter((o) => o.length)\n        const result = {}\n        content.forEach((row, index) => {\n          if (index === 0) {\n            result.name = row\n          } else {\n            const inx = row.indexOf(':')\n            const key = row.slice(0, inx)\n            const value = row.slice(inx + 1)\n            result[key] = value\n          }\n        })\n        return result\n      })\n      break\n    case 'about':\n      section = section.map((o) => {\n        const title = o.match(/.+?\\r\\n/)[0]\n        return {\n          title,\n          content: o.slice(title.length),\n        }\n      })\n      break\n    default:\n      break\n  }\n  // 移除首尾空格\n  section.forEach((item) => {\n    Object.keys(item).forEach((k) => {\n      item[k] = item[k].trim()\n    })\n  })\n\n  return section\n}\n"]}]}