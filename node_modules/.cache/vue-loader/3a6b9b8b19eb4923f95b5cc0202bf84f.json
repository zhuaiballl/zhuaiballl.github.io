{"remainingRequest":"/Users/guohechuan/code/aurora/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/guohechuan/code/aurora/src/components/Cover/index.vue?vue&type=style&index=0&id=dc1e650c&lang=scss&scoped=true&","dependencies":[{"path":"/Users/guohechuan/code/aurora/src/components/Cover/index.vue","mtime":1626163653604},{"path":"/Users/guohechuan/code/aurora/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/guohechuan/code/aurora/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/guohechuan/code/aurora/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/guohechuan/code/aurora/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/guohechuan/code/aurora/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/guohechuan/code/aurora/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLndyYXBwZXIgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKCiAgLmNvdmVyIHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHRvcDogMDsKICAgIGxlZnQ6IDA7CiAgICBvcGFjaXR5OiAwOwogIH0KCiAgLmZhZGVJbiB7CiAgICBhbmltYXRpb246IGNvdmVySW4gMC44cyBlYXNlLW91dCBmb3J3YXJkczsKICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/Cover","sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <img :src=\"defaultCover\" alt=\"defaultCover\" />\n    <img :class=\"['cover', visible && 'fadeIn']\" :src=\"imgSrc\" />\n  </div>\n</template>\n\n<script>\nimport { fileCDN } from '@/utils'\n\nexport default {\n  name: 'Cover',\n  props: {\n    src: {\n      type: String,\n      default: '',\n    },\n    alt: {\n      type: String,\n      default: '',\n    },\n    loadCover: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      defaultCover: this.$config.defaultCover,\n      imgSrc: '',\n      visible: false,\n    }\n  },\n  watch: {\n    loadCover: {\n      immediate: true,\n      handler(val) {\n        if (val) {\n          this.loadImg()\n        }\n      },\n    },\n  },\n  methods: {\n    loadImg() {\n      const cdnUrl = fileCDN(this.src)\n\n      const img = new Image()\n      img.onload = img.onerror = () => {\n        this.imgSrc = cdnUrl\n        this.$emit('loadNext')\n        this.$nextTick(() => (this.visible = true))\n      }\n      img.src = cdnUrl\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.wrapper {\n  position: relative;\n\n  .cover {\n    position: absolute;\n    top: 0;\n    left: 0;\n    opacity: 0;\n  }\n\n  .fadeIn {\n    animation: coverIn 0.8s ease-out forwards;\n  }\n}\n</style>\n"]}]}