{"remainingRequest":"/Users/guohechuan/code/aurora/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/guohechuan/code/aurora/src/components/Panel/index.vue?vue&type=style&index=0&id=530070f2&lang=scss&scoped=true&","dependencies":[{"path":"/Users/guohechuan/code/aurora/src/components/Panel/index.vue","mtime":1626163653607},{"path":"/Users/guohechuan/code/aurora/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/guohechuan/code/aurora/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/guohechuan/code/aurora/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/guohechuan/code/aurora/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/guohechuan/code/aurora/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/guohechuan/code/aurora/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgJy4vaW5kZXguc2Nzcyc7Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqLA","file":"index.vue","sourceRoot":"src/components/Panel","sourcesContent":["<template>\n  <div id=\"panel\" v-show=\"showPanel\">\n    <div class=\"mask\" @click=\"hidePanel\"></div>\n    <div class=\"container\">\n      <div class=\"wrapper\">\n        <div class=\"short-line\">\n          <div></div>\n          <div></div>\n        </div>\n        <div class=\"main\">\n          <div class=\"header\">\n            <div class=\"inner\">{{ panelTitle }}</div>\n          </div>\n          <div class=\"body\" v-if=\"showPanel\">\n            <div class=\"swiper-wrapper\">\n              <ul ref=\"swiper\" id=\"swiper\" class=\"swiper animate\" :style=\"containerStyle\">\n                <li>\n                  <Qrcode @zoom=\"setZoomSrc\" />\n                </li>\n                <li>\n                  <Theme :theme=\"theme\" @switchTheme=\"switchTheme\" />\n                </li>\n                <li>\n                  <Qrcode @zoom=\"setZoomSrc\" />\n                </li>\n                <li>\n                  <Theme :theme=\"theme\" @switchTheme=\"switchTheme\" />\n                </li>\n              </ul>\n            </div>\n            <button class=\"cursor btn left-btn\" @click=\"swiperTo(-1)\">\n              <i class=\"icon icon-left-open-outline\"></i>\n            </button>\n            <button class=\"cursor btn right-btn\" @click=\"swiperTo(1)\">\n              <i class=\"icon icon-right-open-outline\"></i>\n            </button>\n            <div class=\"like\">\n              <p>\n                已有\n                <span>{{ likeTimes }}</span> 人点赞了哦！\n              </p>\n            </div>\n          </div>\n          <div class=\"footer\">\n            <div class=\"cursor\" :data-title=\"likeBtnText\" @click=\"likeSite\"></div>\n          </div>\n        </div>\n        <div class=\"long-line\">\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    </div>\n    <div v-if=\"!!zoomSrc\" class=\"zoom\" @click=\"setZoomSrc()\">\n      <img class=\"cursor\" :src=\"zoomSrc\" alt />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport Theme from './components/Theme'\nimport Qrcode from './components/Qrcode'\nimport { localSave, localRead } from '@/utils'\nimport images from '@/assets/images'\n\nconst { bg } = images\n\nexport default {\n  name: 'Panel',\n  components: { Theme, Qrcode },\n  data() {\n    return {\n      theme: '',\n      likeTimes: 0,\n      isLikeSite: localRead('isLikeSite', false),\n      currentInx: 1,\n      lockSwiper: false,\n      zoomSrc: '',\n    }\n  },\n  computed: {\n    ...mapState({\n      showPanel: (state) => state.showPanel,\n    }),\n    panelTitle() {\n      const inx = (this.currentInx + 1) % 2\n      return ['背景主题', '赛钱箱'][inx]\n    },\n    distance() {\n      return [0, -600, -1200, -1800][this.currentInx]\n    },\n    containerStyle() {\n      return { transform: `translate3d(${this.distance}px, 0, 0)` }\n    },\n    likeBtnText() {\n      return this.isLikeSite ? \"谢谢点赞 (●'◡'●)\" : '点赞一下 (<ゝω・)☆'\n    },\n  },\n  watch: {\n    '$isMobile.value': {\n      immediate: true,\n      handler(val) {\n        if (val) return\n        this.initTheme()\n      },\n    },\n  },\n  mounted() {\n    this.queryLike()\n  },\n  methods: {\n    // 点赞数\n    async queryLike() {\n      this.likeTimes = await this.$store.dispatch('queryLike', 'getTimes')\n    },\n    // 点赞\n    async likeSite() {\n      if (this.isLikeSite) return\n      this.likeTimes = await this.$store.dispatch('queryLike')\n      this.isLikeSite = true\n      localSave('isLikeSite', true)\n    },\n    // 初始化背景主题\n    initTheme() {\n      if (this.theme) return\n      const theme = localRead('theme', 'touhou')\n      this.setTheme(theme)\n    },\n    // 切换主题\n    switchTheme(theme) {\n      if (theme === this.theme) return\n      this.setTheme(theme)\n    },\n    // 设置主题\n    setTheme(theme) {\n      this.theme = theme\n      localSave('theme', theme)\n      window.$('#bg').backstretch(bg[theme], {\n        duration: 10000,\n        alignY: 0,\n        transition: 'fade',\n        transitionDuration: 1000,\n      })\n    },\n    // 关闭面板\n    hidePanel() {\n      this.$store.commit('setShowPanel', false)\n      this.$nextTick(() => {\n        this.currentInx = 1\n      })\n    },\n    // 滑动面板\n    swiperTo(direction) {\n      if (this.lockSwiper) return\n      this.lockSwiper = true\n      const swiper = this.$refs.swiper\n      swiper.classList.add('animate')\n\n      this.currentInx += direction\n      setTimeout(() => {\n        this.lockSwiper = false\n        if (this.currentInx === 0) {\n          swiper.classList.remove('animate')\n          this.currentInx = 2\n        }\n        if (this.currentInx === 3) {\n          swiper.classList.remove('animate')\n          this.currentInx = 1\n        }\n      }, 500)\n    },\n    // 设置缩放二维码\n    setZoomSrc(src = '') {\n      this.zoomSrc = src\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import './index.scss';\n</style>\n"]}]}