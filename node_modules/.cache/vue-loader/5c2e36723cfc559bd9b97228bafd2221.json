{"remainingRequest":"/Users/guohechuan/code/aurora/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/guohechuan/code/aurora/src/views/Inspiration/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/guohechuan/code/aurora/src/views/Inspiration/index.vue","mtime":1626163653612},{"path":"/Users/guohechuan/code/aurora/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/guohechuan/code/aurora/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/guohechuan/code/aurora/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/guohechuan/code/aurora/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBNYXJrRG93biBmcm9tICdAL2NvbXBvbmVudHMvTWFya0Rvd24nCmltcG9ydCBMb2FkaW5nIGZyb20gJ0AvY29tcG9uZW50cy9Mb2FkaW5nJwppbXBvcnQgUGFnaW5hdGlvbiBmcm9tICdAL2NvbXBvbmVudHMvUGFnaW5hdGlvbicKaW1wb3J0IFF1b3RlIGZyb20gJ0AvY29tcG9uZW50cy9RdW90ZScKaW1wb3J0IFNlZ21lbnQgZnJvbSAnQC9jb21wb25lbnRzL1NlZ21lbnQnCmltcG9ydCBDb21tZW50IGZyb20gJ0AvY29tcG9uZW50cy9Db21tZW50JwppbXBvcnQgeyBzaHVmZmxlIH0gZnJvbSAnQC91dGlscycKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSW5zcGlyYXRpb24nLAogIGNvbXBvbmVudHM6IHsKICAgIE1hcmtEb3duLAogICAgTG9hZGluZywKICAgIFBhZ2luYXRpb24sCiAgICBRdW90ZSwKICAgIFNlZ21lbnQsCiAgICBDb21tZW50LAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICBpbml0Q29tbWVudDogZmFsc2UsCiAgICAgIGNvbG9yczogc2h1ZmZsZSh0aGlzLiRjb25maWcudGhlbWVDb2xvcnMpLAogICAgICB0b3RhbENvdW50OiAwLAogICAgICBwYWdlOiAwLAogICAgICBwYWdlU2l6ZTogMTAsCiAgICAgIGluc3BpcmF0aW9uOiBbXSwKICAgICAgbGlzdDogW10sCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgbWF4UGFnZSgpIHsKICAgICAgcmV0dXJuIE1hdGguY2VpbCh0aGlzLnRvdGFsQ291bnQgLyB0aGlzLnBhZ2VTaXplKQogICAgfSwKICAgIGlzRGlzYWJsZWRQcmV2KCkgewogICAgICByZXR1cm4gdGhpcy5wYWdlIDw9IDEKICAgIH0sCiAgICBpc0Rpc2FibGVkTmV4dCgpIHsKICAgICAgcmV0dXJuIHRoaXMucGFnZSA+PSB0aGlzLm1heFBhZ2UKICAgIH0sCiAgfSwKICBhc3luYyBjcmVhdGVkKCkgewogICAgdGhpcy50b3RhbENvdW50ID0gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3F1ZXJ5SW5zcGlyYXRpb25Db3VudCcpCiAgICBhd2FpdCB0aGlzLnF1ZXJ5SW5zcGlyYXRpb24oKQogICAgdGhpcy5pbml0Q29tbWVudCA9IHRydWUKICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIHF1ZXJ5SW5zcGlyYXRpb24odHlwZSA9ICduZXh0JykgewogICAgICBpZiAodGhpcy5sb2FkaW5nKSByZXR1cm4KICAgICAgY29uc3QgcXVlcnlQYWdlID0gdHlwZSA9PT0gJ3ByZXYnID8gdGhpcy5wYWdlIC0gMSA6IHRoaXMucGFnZSArIDEKICAgICAgdGhpcy5wYWdlID0gcXVlcnlQYWdlCgogICAgICBpZiAodGhpcy5saXN0W3F1ZXJ5UGFnZV0pIHsKICAgICAgICB0aGlzLnNjcm9sbFRvcCgoKSA9PiB7CiAgICAgICAgICB0aGlzLmluc3BpcmF0aW9uID0gdGhpcy5saXN0W3F1ZXJ5UGFnZV0KICAgICAgICB9KQogICAgICAgIHJldHVybgogICAgICB9CgogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlCiAgICAgIGNvbnN0IGluc3BpcmF0aW9uID0gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3F1ZXJ5SW5zcGlyYXRpb24nLCB7CiAgICAgICAgcGFnZTogcXVlcnlQYWdlLAogICAgICAgIHBhZ2VTaXplOiB0aGlzLnBhZ2VTaXplLAogICAgICB9KQogICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZQoKICAgICAgdGhpcy5zY3JvbGxUb3AoKCkgPT4gewogICAgICAgIHRoaXMuaW5zcGlyYXRpb24gPSBpbnNwaXJhdGlvbgogICAgICAgIHRoaXMubGlzdFtxdWVyeVBhZ2VdID0gaW5zcGlyYXRpb24KICAgICAgfSkKICAgIH0sCiAgICBzY3JvbGxUb3AoY2IpIHsKICAgICAgd2luZG93LnNjcm9sbFRvKHsgdG9wOiAwLCBiZWhhdmlvcjogJ3Ntb290aCcgfSkKICAgICAgY29uc3QgZGVsYXlUaW1lID0gdGhpcy4kY29uZmlnLmlzTW9iaWxlID8gODAwIDogNjAwCiAgICAgIHNldFRpbWVvdXQoY2IsIGRlbGF5VGltZSkKICAgIH0sCiAgfSwKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/Inspiration","sourcesContent":["<template>\n  <div id=\"inspiration\">\n    <Transition name=\"fade-transform\" mode=\"out-in\">\n      <div class=\"page\" v-if=\"inspiration.length\">\n        <Quote :quote=\"$config.inspirationOpts.qoute\" />\n        <div class=\"content\">\n          <Segment v-for=\"(item, i) in inspiration\" :key=\"item.number\" :title=\"item.date\" :color=\"colors[i]\">\n            <MarkDown :content=\"item.body\" />\n          </Segment>\n        </div>\n        <div class=\"btn-group\" v-if=\"!isDisabledPrev || !isDisabledNext\">\n          <Pagination\n            :loading=\"loading\"\n            :isDisabledPrev=\"isDisabledPrev\"\n            :isDisabledNext=\"isDisabledNext\"\n            @handlePage=\"queryInspiration\"\n          />\n        </div>\n      </div>\n      <Loading v-else />\n    </Transition>\n\n    <Comment v-if=\"$config.inspirationOpts.enableComment && initComment\" title=\"灵感\" />\n  </div>\n</template>\n\n<script>\nimport MarkDown from '@/components/MarkDown'\nimport Loading from '@/components/Loading'\nimport Pagination from '@/components/Pagination'\nimport Quote from '@/components/Quote'\nimport Segment from '@/components/Segment'\nimport Comment from '@/components/Comment'\nimport { shuffle } from '@/utils'\n\nexport default {\n  name: 'Inspiration',\n  components: {\n    MarkDown,\n    Loading,\n    Pagination,\n    Quote,\n    Segment,\n    Comment,\n  },\n  data() {\n    return {\n      loading: false,\n      initComment: false,\n      colors: shuffle(this.$config.themeColors),\n      totalCount: 0,\n      page: 0,\n      pageSize: 10,\n      inspiration: [],\n      list: [],\n    }\n  },\n  computed: {\n    maxPage() {\n      return Math.ceil(this.totalCount / this.pageSize)\n    },\n    isDisabledPrev() {\n      return this.page <= 1\n    },\n    isDisabledNext() {\n      return this.page >= this.maxPage\n    },\n  },\n  async created() {\n    this.totalCount = await this.$store.dispatch('queryInspirationCount')\n    await this.queryInspiration()\n    this.initComment = true\n  },\n  methods: {\n    async queryInspiration(type = 'next') {\n      if (this.loading) return\n      const queryPage = type === 'prev' ? this.page - 1 : this.page + 1\n      this.page = queryPage\n\n      if (this.list[queryPage]) {\n        this.scrollTop(() => {\n          this.inspiration = this.list[queryPage]\n        })\n        return\n      }\n\n      this.loading = true\n      const inspiration = await this.$store.dispatch('queryInspiration', {\n        page: queryPage,\n        pageSize: this.pageSize,\n      })\n      this.loading = false\n\n      this.scrollTop(() => {\n        this.inspiration = inspiration\n        this.list[queryPage] = inspiration\n      })\n    },\n    scrollTop(cb) {\n      window.scrollTo({ top: 0, behavior: 'smooth' })\n      const delayTime = this.$config.isMobile ? 800 : 600\n      setTimeout(cb, delayTime)\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import './index.scss';\n</style>\n"]}]}