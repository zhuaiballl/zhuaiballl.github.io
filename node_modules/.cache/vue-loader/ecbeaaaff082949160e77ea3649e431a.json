{"remainingRequest":"/Users/guohechuan/code/aurora/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/guohechuan/code/aurora/src/components/Footer/index.vue?vue&type=style&index=0&lang=scss&scope=true&","dependencies":[{"path":"/Users/guohechuan/code/aurora/src/components/Footer/index.vue","mtime":1626163653604},{"path":"/Users/guohechuan/code/aurora/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/guohechuan/code/aurora/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/guohechuan/code/aurora/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/guohechuan/code/aurora/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/guohechuan/code/aurora/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/guohechuan/code/aurora/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAnLi9pbmRleC5zY3NzJzsK"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8KA","file":"index.vue","sourceRoot":"src/components/Footer","sourcesContent":["<template>\n  <footer>\n    <div class=\"prpr\" v-if=\"!$isMobile.value\">\n      <div class=\"waifu\" v-if=\"showWaifu\">\n        <div v-show=\"tips && isMini\" :class=\"['tips', this.waifu === 'tia' && 'tia']\" v-html=\"tips\"></div>\n        <canvas @click=\"handleClickWaifu\" id=\"live2d\" width=\"280\" height=\"250\" />\n      </div>\n      <div class=\"tool\">\n        <div class=\"menu\" v-if=\"showWaifu\">\n          <ul>\n            <li\n              class=\"cursor\"\n              v-for=\"item in menu\"\n              :key=\"item.type\"\n              @click=\"handleClick(item.type)\"\n              @mouseenter=\"handleHover(item.type)\"\n            >\n              <i :class=\"['icon', `icon-${item.icon}`]\"></i>\n            </li>\n          </ul>\n          <div class=\"devil\">\n            <i class=\"icon icon-emo-devil\"></i>\n          </div>\n        </div>\n        <APlayer :class=\"isMini && 'mini'\" :audio=\"audio\" preload=\"none\" fixed mini @update:mini=\"handleUpdate\" />\n      </div>\n    </div>\n    <div class=\"site-info\">\n      <p>\n        <i class=\"icon icon-copyright\"></i>2017-2021\n        <i class=\"icon icon-heart\"></i>\n        {{ $config.title }}\n      </p>\n      <p>\n        Theme -\n        <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/chanshiyucx/aurora\">Aurora</a>\n        | {{ $config.subtitle }}\n      </p>\n    </div>\n    <img\n      v-if=\"!$isMobile.value\"\n      class=\"sakura cursor\"\n      :src=\"sakura\"\n      @click=\"dropPanel\"\n      @mouseenter=\"handleHover('panel')\"\n      alt=\"sakura\"\n    />\n  </footer>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport { random } from '@/utils'\nimport model from '@/assets/live2d/waifu.json'\nimport tips from '@/assets/live2d/tips.json'\nimport costume from '@/assets/live2d/costume.json'\nimport images from '@/assets/images'\n\nconst { waifuClick, hoverTips, clickTips, hitokotos } = tips\nconst { sakura } = images\nconst path = '/live2d/'\n\nexport default {\n  name: 'Footer',\n  data() {\n    return {\n      sakura,\n      showWaifu: true,\n      waifu: 'tia',\n      menu: [\n        { icon: 'venus-double', type: 'switch' },\n        { icon: 't-shirt', type: 'dressup' },\n        { icon: 'camera', type: 'takephoto' },\n        { icon: 'comment', type: 'talk' },\n        { icon: 'cancel-outline', type: 'close' },\n      ],\n      audio: this.$config.APlayer,\n      isMini: true,\n    }\n  },\n  computed: mapState({\n    tips: (state) => state.tips,\n    tipsUpdateAt: (state) => state.tipsUpdateAt,\n  }),\n  mounted() {\n    if (!this.$isMobile.value) {\n      this.dressup()\n      this.loopTips()\n    }\n  },\n  methods: {\n    dressup(switchWaifu = false) {\n      if (switchWaifu) this.waifu = this.waifu === 'tia' ? 'pio' : 'tia'\n      // 获取装扮\n      const waifuCostume = costume[this.waifu]\n      let textures\n      while (!textures || textures === model.textures[0]) {\n        textures = waifuCostume[random(0, waifuCostume.length - 1)]\n      }\n      // 获取模型\n      model.model = `moc/${this.waifu}.moc`\n      model.textures = [textures]\n      // 设置缩放比例\n      model.layout.width = this.waifu === 'tia' ? 1.82 : 2\n      window.waifuModel = model\n      window.loadlive2d('live2d', path, '')\n    },\n    loopTips() {\n      setTimeout(this.loopTips, 16 * 1000)\n      const now = new Date()\n      if (this.tips || (this.tipsUpdateAt && now - this.tipsUpdateAt < 6000)) return\n      const inx = random(0, hitokotos.length - 1)\n      const nextTips = hitokotos[inx].hitokoto\n      this.$store.dispatch('showTips', { tips: nextTips })\n    },\n    handleClickWaifu() {\n      let nextTips = this.tips\n      while (nextTips === this.tips) {\n        const inx = random(0, waifuClick.length - 1)\n        nextTips = waifuClick[inx]\n      }\n      this.$store.dispatch('showTips', { tips: nextTips })\n    },\n    handleHover(type) {\n      let tips\n      if (type === 'switch') {\n        tips = `要召唤<span style=\"color: #b854d4\">${\n          this.waifu === 'pio' ? ' 欧内酱 Tia ' : ' 一抹多 Pio '\n        } </span>么(◍˃̶ᗜ˂̶◍)✩`\n      } else {\n        tips = hoverTips[type]\n      }\n      if (!tips) return\n      this.$store.dispatch('showTips', { tips })\n    },\n    handleClick(type) {\n      switch (type) {\n        case 'switch':\n          this.dressup(true)\n          break\n        case 'dressup':\n          this.dressup()\n          break\n        case 'takephoto':\n          window.Live2D.captureName = 'waifu.png'\n          window.Live2D.captureFrame = true\n          this.$store.dispatch('showTips', { tips: clickTips.takePhoto })\n          break\n        case 'talk':\n          const inx = random(0, hitokotos.length - 1)\n          const tips = hitokotos[inx].hitokoto\n          this.$store.dispatch('showTips', { tips })\n          break\n        case 'close':\n          this.$store.dispatch('showTips', { tips: clickTips.close })\n          setTimeout(() => {\n            this.showWaifu = false\n          }, 2000)\n          break\n        default:\n          return\n      }\n    },\n    handleUpdate(isMini) {\n      this.isMini = isMini\n    },\n    dropPanel() {\n      this.$store.commit('setShowPanel', true)\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scope>\n@import './index.scss';\n</style>\n"]}]}